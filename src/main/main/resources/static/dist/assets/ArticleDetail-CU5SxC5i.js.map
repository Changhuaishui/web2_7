{"version":3,"file":"ArticleDetail-CU5SxC5i.js","sources":["../../src/utils/ArticleContentProcessor.js","../../src/components/ArticleDetail.vue"],"sourcesContent":["/**\r\n * 文章内容处理工具\r\n * 用于处理文章内容中的图片占位符，将其替换为实际的图片元素\r\n */\r\nexport default {\r\n  /**\r\n   * 处理文章内容\r\n   * @param {Object} article 文章对象\r\n   * @returns {String} 处理后的文章内容\r\n   */\r\n  processArticleContent(article) {\r\n    if (!article || !article.content) {\r\n      console.warn('文章内容为空');\r\n      return '';\r\n    }\r\n    \r\n    // 检查内容中是否存在占位符\r\n    const placeholders = article.content.match(/\\[\\[IMG:([^\\]]+)\\]\\]/g) || [];\r\n    \r\n    // 如果没有图片映射信息但内容中有占位符，尝试自动生成映射信息\r\n    if ((!article.imageMappings || article.imageMappings === '{}') && placeholders.length > 0) {\r\n      console.log(`没有图片映射信息，但发现 ${placeholders.length} 个占位符，尝试自动修复`);\r\n      return this.autoFixPlaceholders(article, placeholders);\r\n    }\r\n    \r\n    // 检查是否有图片映射信息\r\n    if (!article.imageMappings) {\r\n      console.log('没有图片映射信息，返回原始内容');\r\n      return article.content;\r\n    }\r\n    \r\n    try {\r\n      // 解析图片映射\r\n      const imageMappings = JSON.parse(article.imageMappings);\r\n      let processedContent = article.content;\r\n      \r\n      console.log(`处理文章内容，发现 ${Object.keys(imageMappings).length} 张图片需要替换`);\r\n      \r\n      // 先检查一下占位符格式是否正确\r\n      const placeholders = processedContent.match(/\\[\\[IMG:[^\\]]+\\]\\]/g) || [];\r\n      console.log('找到的占位符:', placeholders);\r\n      \r\n      // 遍历替换所有图片占位符\r\n      for (const imageId in imageMappings) {\r\n        if (!imageId) continue;\r\n        \r\n        const imgData = imageMappings[imageId];\r\n        const placeholder = `[[IMG:${imageId}]]`;\r\n        \r\n        console.log(`处理图片 ${imageId}, 占位符: ${placeholder}, 图片数据:`, imgData);\r\n        \r\n        // 构建图片HTML元素\r\n        let imagePath;\r\n        if (article.ulid) {\r\n          // 使用新的基于ULID的图片路径 - 确保路径格式与ImageController.java期望的格式一致\r\n          // ImageController期望格式: /api/images/{articleUlid}/{imageUlid}\r\n          // 图片ID可能是简单数字或复杂字符串，统一使用ULID格式\r\n          \r\n          // 检查是否有扩展名信息\r\n          const extension = imgData.extension || '.jpg';\r\n          \r\n          // 构建图片URL\r\n          imagePath = `/api/images/${article.ulid}/${imageId}${extension}`;\r\n          console.log(`为图片 ${imageId} 生成规范化路径(扩展名${extension}): ${imagePath}`);\r\n        } else {\r\n          // 兼容旧的图片路径格式\r\n          const imageIndex = imgData.index;\r\n          const images = article.images ? article.images.split(',') : [];\r\n          imagePath = images[imageIndex] || '';\r\n          // 确保旧格式路径也使用正确的API前缀\r\n          if (imagePath && !imagePath.startsWith('/api/')) {\r\n            imagePath = `/api/images/${imagePath}`;\r\n          }\r\n          console.log(`为图片 ${imageId} 使用旧格式路径: ${imagePath}`);\r\n        }\r\n        \r\n        // 创建图片HTML\r\n        const imgHtml = `<img src=\"${imagePath}\" class=\"article-image\" alt=\"文章图片${Number(imgData.index) + 1}\" style=\"max-width:100%; height:auto;\" />`;\r\n        \r\n        // 检查占位符是否存在\r\n        if (processedContent.includes(placeholder)) {\r\n          // 替换占位符\r\n          processedContent = processedContent.replace(placeholder, imgHtml);\r\n          console.log(`替换占位符 ${placeholder} 成功`);\r\n        } else {\r\n          console.warn(`未找到占位符 ${placeholder}`);\r\n          \r\n          // 尝试查找不同格式的占位符\r\n          const altPlaceholder = `[[IMG:${imageId}]]`.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]');\r\n          const regex = new RegExp(altPlaceholder, 'g');\r\n          \r\n          if (regex.test(processedContent)) {\r\n            processedContent = processedContent.replace(regex, imgHtml);\r\n            console.log(`使用正则表达式替换占位符成功`);\r\n          }\r\n        }\r\n      }\r\n      \r\n      // 最后再检查一次是否还有未替换的占位符\r\n      const remainingPlaceholders = processedContent.match(/\\[\\[IMG:[^\\]]+\\]\\]/g) || [];\r\n      if (remainingPlaceholders.length > 0) {\r\n        console.warn(`处理后仍有 ${remainingPlaceholders.length} 个未替换的占位符:`, remainingPlaceholders);\r\n      }\r\n      \r\n      return processedContent;\r\n    } catch (error) {\r\n      console.error('处理文章内容出错:', error);\r\n      return article.content;\r\n    }\r\n  },\r\n  \r\n  /**\r\n   * 自动修复没有映射信息但有占位符的文章内容\r\n   * @param {Object} article 文章对象\r\n   * @param {Array} placeholders 找到的占位符列表\r\n   * @returns {String} 处理后的文章内容\r\n   */\r\n  autoFixPlaceholders(article, placeholders) {\r\n    if (!placeholders || !article) return article.content;\r\n    \r\n    // 如果文章已有imageMappings数据，则不需要自动修复\r\n    if (article.imageMappings && Object.keys(JSON.parse(article.imageMappings)).length > 0) {\r\n      console.log('文章已有imageMappings数据，跳过自动修复', article.imageMappings);\r\n      return article.content;\r\n    }\r\n    \r\n    console.log('开始自动修复占位符，文章ID:', article.id);\r\n    \r\n    // 使用正则表达式查找所有图片占位符\r\n    const placeholderRegex = /\\[\\[IMG:([^\\]]+)\\]\\]/g;\r\n    let match;\r\n    let index = 0;\r\n    let fixedContent = article.content;\r\n    \r\n    while ((match = placeholderRegex.exec(article.content)) !== null) {\r\n      const placeholder = match[0];\r\n      const imageId = match[1];\r\n      console.log(`找到占位符 ${placeholder}，图片ID: ${imageId}`);\r\n      \r\n      // 尝试自动修复没有映射信息但有占位符的文章内容\r\n      let imagePath;\r\n      if (article.ulid) {\r\n        // 使用新的基于ULID的图片路径 - 确保路径格式与ImageController.java期望的格式一致\r\n        // ImageController期望格式: /api/images/{articleUlid}/{imageUlid}\r\n        // 图片ID可能是简单数字或复杂字符串，统一使用ULID格式\r\n        \r\n        // 不指定扩展名，让服务器端自动匹配\r\n        imagePath = `/api/images/${article.ulid}/${imageId}`;\r\n        console.log(`为图片 ${imageId} 生成规范化路径(自动修复): ${imagePath}`);\r\n      } else {\r\n        // 兼容旧的图片路径格式\r\n        const images = article.images ? article.images.split(',') : [];\r\n        imagePath = images[index] || '';\r\n        // 确保路径使用正确的API前缀\r\n        if (imagePath && !imagePath.startsWith('/api/')) {\r\n          imagePath = `/api/images/${imagePath}`;\r\n        }\r\n        console.log(`为图片 ${imageId} 使用旧格式路径: ${imagePath}`);\r\n      }\r\n      \r\n      // 创建图片HTML元素\r\n      const imgHtml = `<div class=\"article-image-container\"><img src=\"${imagePath}\" alt=\"文章图片 ${index + 1}\" style=\"max-width:100%; height:auto;\" /></div>`;\r\n      \r\n      // 替换占位符为图片HTML\r\n      fixedContent = fixedContent.replace(placeholder, imgHtml);\r\n      index++;\r\n    }\r\n    \r\n    console.log(`自动修复完成，共处理了 ${index} 个占位符`);\r\n    return fixedContent;\r\n  }\r\n} ","<script>\nimport { ref, onMounted, computed } from 'vue'\nimport { useRoute } from 'vue-router'\nimport axios from 'axios'\nimport { ElMessage } from 'element-plus'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/zh-cn'\nimport ArticleContentProcessor from '@/utils/ArticleContentProcessor'\n\ndayjs.locale('zh-cn')\n\nexport default {\n  name: 'ArticleDetail',\n  setup() {\n    const route = useRoute()\n    const article = ref(null)\n    const headImage = ref(null)\n    const loading = ref(true)\n    const articleTags = ref([])\n    const generateSummaryLoading = ref(false)\n    const processedContent = ref('')\n    const relatedArticles = ref([])\n    const loadingRelated = ref(false)\n    const generatingKeywords = ref(false)\n    const regeneratingAll = ref(false)\n    \n    // 计算属性：将关键词字符串拆分为数组\n    const keywordsList = computed(() => {\n      if (article.value?.keywords) {\n        return article.value.keywords.split(',').map(k => k.trim()).filter(k => k);\n      }\n      return [];\n    });\n\n    // 格式化日期时间\n    const formatDate = (dateStr) => {\n      if (!dateStr) {\n        console.log('时间为空:', dateStr);\n        return '暂无时间';\n      }\n      try {\n        const formattedDate = dayjs(dateStr).format('YYYY-MM-DD HH:mm:ss');\n        console.log('格式化时间:', dateStr, '->', formattedDate);\n        return formattedDate;\n      } catch (error) {\n        console.error('时间格式化错误:', error, dateStr);\n        return dateStr;\n      }\n    }\n\n    const loadArticle = async () => {\n      try {\n        console.log('请求文章详情，URL参数：', route.params.id);\n        const response = await axios.post('/api/crawler/articles/detail', {\n          url: route.params.id\n        });\n        if (response.data) {\n          // 处理文章数据\n          article.value = {\n            ...response.data,\n            author: response.data.author || '未知',\n            accountName: response.data.accountName || '未知',\n            publishTime: response.data.publishTime || null,\n            summary: response.data.summary || null,\n            keywords: response.data.keywords || null\n          }\n          console.log('文章数据:', article.value);\n          \n          // 调试 - 检查关键词\n          if (article.value.keywords) {\n            console.log('文章关键词:', article.value.keywords);\n            console.log('关键词数组:', article.value.keywords.split(','));\n          } else {\n            console.warn('文章没有关键词');\n          }\n          \n          // 调试 - 检查图片映射信息\n          console.log('图片映射信息(imageMappings):', article.value.imageMappings);\n          \n          // 检查内容中是否有占位符格式\n          const placeholders = (article.value.content.match(/\\[\\[IMG:[^\\]]+\\]\\]/g) || []);\n          console.log(`内容中包含 ${placeholders.length} 个图片占位符`);\n          \n          // 处理文章内容，合并图文\n          if (article.value.imageMappings) {\n            console.log('找到图片映射信息，开始处理图文内容');\n            try {\n              // 尝试解析映射信息\n              const mappings = JSON.parse(article.value.imageMappings);\n              console.log('解析后的映射信息:', mappings);\n              \n              // 计算占位符数量\n              const placeholderCount = (article.value.content.match(/\\[\\[IMG:[^\\]]+\\]\\]/g) || []).length;\n              console.log(`文章内容中找到 ${placeholderCount} 个图片占位符`);\n              \n              processedContent.value = ArticleContentProcessor.processArticleContent(article.value);\n            } catch (error) {\n              console.error('处理图文内容时出错:', error);\n              processedContent.value = article.value.content;\n            }\n          } else if (placeholders.length > 0) {\n            // 没有映射信息但有占位符，尝试自动修复\n            console.log('没有图片映射信息，但发现占位符，尝试自动修复');\n            processedContent.value = ArticleContentProcessor.autoFixPlaceholders(article.value, placeholders);\n          } else {\n            console.log('没有图片映射信息，使用原始内容');\n            processedContent.value = article.value.content;\n          }\n          \n          // 加载文章头图\n          await loadHeadImage();\n          \n          // 加载文章标签\n          await loadArticleTags();\n          \n          // 加载相关文章\n          if (article.value.id) {\n            await loadRelatedArticles(article.value.id);\n          }\n        }\n      } catch (error) {\n        console.error('加载文章失败:', error);\n        console.error('请求URL:', error.config?.url);\n        console.error('请求方法:', error.config?.method);\n        console.error('支持的方法:', error.response?.headers?.allow);\n        console.error('错误详情:', error.response?.data || error.message);\n        ElMessage.error('加载文章失败：' + (error.response?.data || error.message))\n      } finally {\n        loading.value = false;\n      }\n    }\n\n    const loadHeadImage = async () => {\n      if (!article.value || !article.value.id) return;\n      \n      try {\n        // 检查文章是否有ULID和图片\n        if (!article.value.ulid) {\n          console.warn('文章没有ULID，尝试使用旧API获取头图');\n          // 尝试使用旧的API获取头图\n          try {\n            const response = await axios.get(`/api/crawler/image/${article.value.id}`);\n            if (response.data && response.data.imageUrl) {\n              headImage.value = response.data.imageUrl;\n              console.log('使用旧API获取头图成功:', headImage.value);\n              return;\n            }\n          } catch (err) {\n            console.warn('使用旧API获取头图失败:', err);\n          }\n        }\n        \n        if (!article.value.images) {\n          console.warn('文章没有图片信息');\n          return;\n        }\n        \n        // 解析图片路径\n        const imagePaths = article.value.images.split(',');\n        if (imagePaths.length === 0) {\n          console.warn('文章没有图片路径');\n          return;\n        }\n        \n        // 使用第一张图片作为头图\n        const firstImagePath = imagePaths[0];\n        \n        // 检查图片路径格式\n        if (firstImagePath.includes('/')) {\n          // 新格式: articleUlid/imageUlid.jpg\n          const imageUrl = `/api/images/${firstImagePath}`;\n          console.log('使用新API路径获取头图:', imageUrl);\n          headImage.value = imageUrl;\n        } else {\n          // 旧格式，直接使用路径\n          console.log('使用旧格式图片路径:', firstImagePath);\n          // 确保旧格式路径也使用正确的API前缀\n          if (firstImagePath && !firstImagePath.startsWith('/api/')) {\n            headImage.value = `/api/crawler/images/${firstImagePath}`;\n            console.log('使用旧格式图片路径(修正API前缀):', headImage.value);\n          } else {\n            headImage.value = firstImagePath;\n          }\n        }\n      } catch (error) {\n        console.warn('无法加载文章头图:', error);\n        // 如果加载失败，静默处理，不显示图片即可\n      }\n    }\n\n    const loadArticleTags = async () => {\n      if (!article.value || !article.value.id) return;\n      \n      try {\n        const response = await axios.get(`/api/tags/article/${article.value.id}`);\n        if (response.data && response.data.tags) {\n          articleTags.value = response.data.tags;\n        }\n      } catch (error) {\n        console.warn('无法加载文章标签:', error);\n        // 如果加载失败，静默处理\n      }\n    }\n    \n    const loadRelatedArticles = async (articleId) => {\n      try {\n        const response = await axios.get(`/api/articles/${articleId}/related`);\n        if (response.data && response.data.success) {\n          relatedArticles.value = response.data.relatedArticles || [];\n          console.log(`加载了${relatedArticles.value.length}篇相关文章`);\n        }\n      } catch (error) {\n        console.warn('无法加载相关文章:', error);\n        // 如果加载失败，静默处理\n      }\n    }\n    \n    const fetchRelatedArticles = async () => {\n      if (!article.value || !article.value.id) {\n        ElMessage.warning('无法获取相关文章：缺少文章ID');\n        return;\n      }\n      \n      loadingRelated.value = true;\n      try {\n        const response = await axios.post(`/api/articles/${article.value.id}/crawl-related`);\n        \n        if (response.data && response.data.success) {\n          const count = response.data.count || 0;\n          \n          if (count > 0) {\n            ElMessage.success(`成功找到${count}篇相关文章`);\n            // 重新加载相关文章列表\n            await loadRelatedArticles(article.value.id);\n          } else {\n            ElMessage.info('未找到相关文章');\n          }\n        } else {\n          ElMessage.error('获取相关文章失败：' + (response.data.message || '未知错误'));\n        }\n      } catch (error) {\n        console.error('获取相关文章失败:', error);\n        ElMessage.error('获取相关文章失败：' + (error.response?.data?.message || error.message));\n      } finally {\n        loadingRelated.value = false;\n      }\n    }\n\n    const openArticle = () => {\n      if (!article.value) {\n        ElMessage.warning('无效的文章数据');\n        return;\n      }\n\n      // 优先使用原文链接\n      let url = article.value.sourceUrl;\n      \n      // 如果没有原文链接，使用文章URL\n      if (!url || url === 'javascript:;') {\n        url = article.value.url;\n      }\n\n      // 验证URL是否有效\n      if (!url || url === 'javascript:;' || url.trim() === '') {\n        ElMessage.warning('无法获取有效的文章链接');\n        return;\n      }\n\n      console.log('打开链接:', url);\n      try {\n        // 验证URL格式\n        new URL(url);\n        window.open(url, '_blank');\n      } catch (error) {\n        console.error('无效的URL格式:', url, error);\n        ElMessage.error('无效的文章链接格式');\n      }\n    }\n\n    const generateSummary = async () => {\n      if (!article.value || !article.value.id) {\n        ElMessage.warning('无法生成摘要：缺少文章ID');\n        return;\n      }\n      \n      generateSummaryLoading.value = true;\n      try {\n        const response = await axios.post(`/api/articles/${article.value.id}/summarize`);\n        \n        if (response.data.success) {\n          article.value.summary = response.data.summary;\n          \n          if (response.data.keywords) {\n            article.value.keywords = response.data.keywords;\n          }\n          \n          if (response.data.isExisting) {\n            ElMessage.info('已加载现有摘要');\n          } else {\n            ElMessage.success('摘要生成成功');\n            \n            // 如果成功生成了相关文章，刷新相关文章列表\n            if (response.data.relatedArticlesCount > 0) {\n              await loadRelatedArticles(article.value.id);\n            }\n          }\n        } else {\n          ElMessage.error('摘要生成失败：' + response.data.message);\n        }\n      } catch (error) {\n        console.error('生成摘要失败:', error);\n        ElMessage.error('生成摘要失败：' + (error.response?.data?.message || error.message));\n      } finally {\n        generateSummaryLoading.value = false;\n      }\n    }\n\n    // 重新生成摘要和关键词的方法\n    const regenerateSummaryAndKeywords = async () => {\n      if (!article.value || !article.value.id) {\n        ElMessage.warning('无法重新生成摘要和关键词：缺少文章ID');\n        return;\n      }\n      \n      regeneratingAll.value = true;\n      try {\n        // 使用与generateSummary相同的接口，但添加force=true参数强制重新生成\n        const response = await axios.post(`/api/articles/${article.value.id}/summarize?force=true`);\n        \n        if (response.data.success) {\n          article.value.summary = response.data.summary;\n          \n          if (response.data.keywords) {\n            article.value.keywords = response.data.keywords;\n          }\n          \n          ElMessage.success('摘要和关键词重新生成成功');\n          \n          // 如果成功生成了相关文章，刷新相关文章列表\n          if (response.data.relatedArticlesCount > 0) {\n            await loadRelatedArticles(article.value.id);\n            ElMessage.info(`已找到${response.data.relatedArticlesCount}篇相关文章`);\n          }\n        } else {\n          ElMessage.error('重新生成失败：' + response.data.message);\n        }\n      } catch (error) {\n        console.error('重新生成摘要和关键词失败:', error);\n        ElMessage.error('重新生成失败：' + (error.response?.data?.message || error.message));\n      } finally {\n        regeneratingAll.value = false;\n      }\n    }\n\n    const generateKeywords = async () => {\n      if (!article.value || !article.value.id) {\n        ElMessage.warning('无法生成关键词：缺少文章ID');\n        return;\n      }\n      \n      generatingKeywords.value = true;\n      try {\n        const response = await axios.post(`/api/articles/${article.value.id}/generate-keywords`);\n        \n        if (response.data.success) {\n          article.value.keywords = response.data.keywords;\n          ElMessage.success('关键词生成成功');\n          \n          // 如果成功生成了相关文章，刷新相关文章列表\n          if (response.data.relatedArticlesCount > 0) {\n            await loadRelatedArticles(article.value.id);\n            ElMessage.info(`已找到${response.data.relatedArticlesCount}篇相关文章`);\n          }\n        } else {\n          ElMessage.error('关键词生成失败：' + response.data.message);\n        }\n      } catch (error) {\n        console.error('生成关键词失败:', error);\n        ElMessage.error('生成关键词失败：' + (error.response?.data?.message || error.message));\n      } finally {\n        generatingKeywords.value = false;\n      }\n    }\n\n    const openRelatedArticle = (url) => {\n      if (!url) {\n        ElMessage.warning('文章链接不可用');\n        console.error('文章链接为空');\n        return;\n      }\n      \n      console.log('打开相关文章链接:', url);\n      \n      // 验证URL\n      try {\n        // 修正常见的URL问题\n        let fixedUrl = url;\n        \n        // 处理URL中的HTML实体编码问题（例如&amp;会被错误解析）\n        if (fixedUrl.includes('&amp;')) {\n          fixedUrl = fixedUrl.replace(/&amp;/g, '&');\n          console.log('修复HTML实体编码:', fixedUrl);\n        }\n        \n        // 处理以/开头的相对URL，添加搜狗域名\n        if (fixedUrl.startsWith('/link?url=')) {\n          fixedUrl = 'https://weixin.sogou.com' + fixedUrl;\n          console.log('添加域名到相对URL:', fixedUrl);\n        }\n        \n        // 检查URL是否是编码后的搜狗URL（以后端存储的格式）\n        if (fixedUrl.includes('weixin.sogou.com/link?url=')) {\n          console.log('检测到搜狗链接，直接跳转:', fixedUrl);\n          // 对于搜狗链接，在新标签页打开\n          window.open(fixedUrl, '_blank');\n          return;\n        }\n        \n        // 处理搜狗链接格式 - 尝试直接从URL提取微信链接\n        if (fixedUrl.includes('url=')) {\n          try {\n            // 提取url参数\n            const urlMatch = fixedUrl.match(/url=([^&]+)/);\n            if (urlMatch && urlMatch[1]) {\n              let targetUrl = decodeURIComponent(urlMatch[1]);\n              console.log('从搜狗链接提取目标URL:', targetUrl);\n              \n              // 检查提取的URL是否需要添加前缀\n              if (!targetUrl.startsWith('http') && \n                  (targetUrl.includes('mp.weixin.qq.com') || \n                   targetUrl.includes('weixin.qq.com'))) {\n                targetUrl = 'https://' + targetUrl;\n                console.log('添加https前缀到微信URL:', targetUrl);\n              }\n              \n              fixedUrl = targetUrl;\n            }\n          } catch (e) {\n            console.warn('提取搜狗链接参数失败:', e);\n          }\n        }\n        \n        // 如果URL不包含协议，添加https://\n        if (!fixedUrl.startsWith('http://') && !fixedUrl.startsWith('https://')) {\n          fixedUrl = 'https://' + fixedUrl;\n          console.log('添加协议到URL:', fixedUrl);\n        }\n        \n        // 验证URL格式\n        new URL(fixedUrl);\n        \n        // 添加用户提示\n        if (fixedUrl.includes('weixin.sogou.com')) {\n          ElMessage({\n            message: '正在跳转到搜狗中转页面，可能需要验证',\n            type: 'warning',\n            duration: 3000\n          });\n        }\n        \n        // 使用window.open在新标签页打开，而不是在当前页面跳转\n        console.log('最终跳转URL:', fixedUrl);\n        window.open(fixedUrl, '_blank');\n      } catch (error) {\n        console.error('无效的URL格式:', url, error);\n        \n        // 尝试最后的后备方案 - 如果链接格式无效但包含weixin.sogou.com，尝试直接打开\n        if (url.includes('weixin.sogou.com') || url.includes('sogou')) {\n          console.log('尝试直接打开搜狗URL:', url);\n          ElMessage({\n            message: '链接格式异常，尝试直接跳转到搜狗页面',\n            type: 'warning',\n            duration: 3000\n          });\n          window.open('https://weixin.sogou.com', '_blank');\n          return;\n        }\n        \n        ElMessage.error('无效的文章链接格式');\n      }\n    }\n\n    onMounted(() => {\n      loadArticle()\n    })\n\n    return {\n      article,\n      openArticle,\n      formatDate,\n      headImage,\n      loading,\n      articleTags,\n      generateSummary,\n      generateSummaryLoading,\n      processedContent,\n      relatedArticles,\n      loadingRelated,\n      fetchRelatedArticles,\n      keywordsList,\n      generateKeywords,\n      generatingKeywords,\n      regenerateSummaryAndKeywords,\n      regeneratingAll,\n      openRelatedArticle\n    }\n  }\n}\n</script>\n\n<template>\n  <div class=\"article-detail\" v-if=\"article\">\n    <el-card>\n      <template #header>\n        <div class=\"article-header\">\n          <h1>{{ article.title }}</h1>\n          <div class=\"article-meta\">\n            <span>作者：{{ article.author || '未知' }}</span>\n            <span>公众号：{{ article.accountName || '未知' }}</span>\n            <span>发布时间：\n              <span v-if=\"article.publishTime\">\n                {{ formatDate(article.publishTime) }}\n                <el-tooltip effect=\"dark\" placement=\"top\">\n                  <template #content>\n                    原始值: {{ article.publishTime }}\n                  </template>\n                  <i class=\"el-icon-info\" style=\"margin-left: 5px;\"></i>\n                </el-tooltip>\n              </span>\n              <span v-else>暂无时间</span>\n            </span>\n          </div>\n          <div v-if=\"articleTags.length\" class=\"article-tags\">\n            <el-tag\n              v-for=\"tag in articleTags\"\n              :key=\"tag\"\n              type=\"primary\"\n              effect=\"light\"\n              class=\"tag-item\"\n            >\n              {{ tag }}\n            </el-tag>\n          </div>\n        </div>\n      </template>\n      \n      <div v-if=\"headImage\" class=\"article-head-image\">\n        <img :src=\"headImage\" alt=\"文章头图\" />\n      </div>\n      \n      <div v-if=\"article.summary\" class=\"article-summary\">\n        <h3>文章摘要</h3>\n        <div class=\"summary-content\">{{ article.summary }}</div>\n        <div v-if=\"article.keywords\" class=\"keywords-in-summary\">\n          <span class=\"keywords-label\">关键词：</span>\n          <el-tag\n            v-for=\"keyword in keywordsList\"\n            :key=\"keyword\"\n            type=\"primary\"\n            effect=\"light\"\n            class=\"keyword-item\"\n            size=\"small\"\n          >\n            {{ keyword }}\n          </el-tag>\n        </div>\n        <div v-else class=\"keywords-in-summary\">\n          <el-button \n            type=\"primary\" \n            @click=\"generateKeywords\" \n            :loading=\"generatingKeywords\"\n            size=\"small\"\n            plain\n          >\n            生成文章关键词\n          </el-button>\n        </div>\n        \n        <div class=\"regenerate-buttons\" style=\"margin-top: 15px;\">\n          <el-button \n            type=\"primary\" \n            @click=\"regenerateSummaryAndKeywords\" \n            :loading=\"regeneratingAll\"\n            size=\"small\"\n            plain\n          >\n            重新生成摘要和关键词\n          </el-button>\n        </div>\n      </div>\n      \n      <div v-else class=\"article-summary-generate\">\n        <el-button \n          type=\"primary\" \n          @click=\"generateSummary\" \n          :loading=\"generateSummaryLoading\"\n          plain\n        >\n          生成文章摘要\n        </el-button>\n      </div>\n      \n      <div class=\"article-content\" v-html=\"processedContent\"></div>\n      \n      <!-- 相关文章部分 -->\n      <div v-if=\"relatedArticles.length\" class=\"related-articles\">\n        <h3>相关文章</h3>\n        <ul class=\"related-article-list\">\n          <li v-for=\"article in relatedArticles\" :key=\"article.id\" class=\"related-article-item\">\n            <a \n              :href=\"article.relatedUrl\" \n              target=\"_blank\" \n              class=\"related-article-link\"\n              @click.prevent=\"openRelatedArticle(article.relatedUrl)\"\n            >\n              {{ article.title || '相关文章' }}\n              <span v-if=\"article.relatedUrl\" class=\"article-link-debug\" style=\"display: none;\">{{ article.relatedUrl }}</span>\n            </a>\n          </li>\n        </ul>\n      </div>\n      \n      <div class=\"article-footer\">\n        <el-button type=\"primary\" @click=\"openArticle\">\n          {{ article.sourceUrl ? '阅读原文' : '查看文章' }}\n        </el-button>\n        \n        <el-button v-if=\"!relatedArticles.length\" type=\"info\" @click=\"fetchRelatedArticles\" :loading=\"loadingRelated\">\n          查找相关文章\n        </el-button>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<style scoped>\n.article-detail {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.article-header {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.article-head-image {\n  width: 100%;\n  max-height: 400px;\n  overflow: hidden;\n  margin-bottom: 30px;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.article-head-image img {\n  width: 100%;\n  height: auto;\n  display: block;\n  object-fit: contain;\n  max-height: 400px;\n}\n\n.article-meta {\n  color: #666;\n  font-size: 14px;\n  margin-top: 10px;\n}\n\n.article-tags {\n  margin-top: 15px;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.tag-item {\n  margin: 0 5px;\n}\n\n.article-meta span {\n  margin: 0 10px;\n}\n\n.article-content {\n  line-height: 1.8;\n  font-size: 16px;\n}\n\n.article-summary {\n  background-color: #f8f9fa;\n  padding: 15px;\n  border-left: 4px solid #409EFF;\n  margin: 20px 0;\n  border-radius: 4px;\n}\n\n.article-summary-generate {\n  text-align: center;\n  margin: 20px 0;\n}\n\n.article-summary h3 {\n  margin-top: 0;\n  margin-bottom: 10px;\n  color: #409EFF;\n}\n\n.summary-content {\n  line-height: 1.6;\n  color: #333;\n}\n\n.article-footer {\n  margin-top: 30px;\n  text-align: center;\n}\n\n.article-keywords {\n  margin-top: 15px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.keywords-in-summary {\n  margin-top: 15px;\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.keywords-label {\n  color: #666;\n  font-size: 14px;\n  margin-right: 10px;\n}\n\n.keyword-item {\n  margin: 0 3px;\n}\n\n.related-articles {\n  margin-top: 30px;\n  border-top: 1px dashed #ddd;\n  padding-top: 15px;\n}\n\n.related-articles h3 {\n  font-size: 18px;\n  color: #333;\n  margin-bottom: 15px;\n}\n\n.related-article-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.related-article-item {\n  padding: 8px 0;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.related-article-link {\n  color: #409EFF;\n  text-decoration: none;\n  display: block;\n  padding: 5px 10px;\n  border-radius: 4px;\n  transition: background-color 0.2s;\n}\n\n.related-article-link:hover {\n  background-color: #f0f7ff;\n  color: #0056b3;\n}\n\n/* 添加全局图片样式，确保所有图片适应容器宽度 */\n:deep(.article-content img) {\n  max-width: 100%;\n  height: auto;\n  display: block;\n  margin: 10px auto;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n</style> "],"names":["ArticleContentProcessor","article","placeholders","imageMappings","processedContent","imageId","imgData","placeholder","imagePath","extension","imageIndex","imgHtml","altPlaceholder","regex","remainingPlaceholders","error","placeholderRegex","match","index","fixedContent","dayjs","_sfc_main","route","useRoute","ref","headImage","loading","articleTags","generateSummaryLoading","relatedArticles","loadingRelated","generatingKeywords","regeneratingAll","keywordsList","computed","_a","k","formatDate","dateStr","formattedDate","loadArticle","response","axios","mappings","placeholderCount","loadHeadImage","loadArticleTags","loadRelatedArticles","_b","_d","_c","_e","ElMessage","_f","err","imagePaths","firstImagePath","imageUrl","articleId","fetchRelatedArticles","count","openArticle","url","generateSummary","regenerateSummaryAndKeywords","generateKeywords","openRelatedArticle","fixedUrl","urlMatch","targetUrl","e","onMounted","_hoisted_2","_hoisted_3","_hoisted_8","_hoisted_10","_hoisted_15","_hoisted_17","_hoisted_18","_hoisted_20","$setup","_openBlock","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","_createElementVNode","_toDisplayString","_cache","_createTextVNode","_hoisted_4","_component_el_tooltip","_withCtx","_hoisted_5","_hoisted_6","_Fragment","_renderList","tag","_createBlock","_component_el_tag","_createCommentVNode","_hoisted_7","_hoisted_9","_hoisted_11","keyword","_hoisted_12","_component_el_button","_hoisted_13","_hoisted_14","_hoisted_16","_withModifiers","$event","_hoisted_19"],"mappings":"yPAIA,MAAeA,EAAA,CAMb,sBAAsBC,EAAS,CAC7B,GAAI,CAACA,GAAW,CAACA,EAAQ,QACvB,eAAQ,KAAK,QAAQ,EACd,GAIT,MAAMC,EAAeD,EAAQ,QAAQ,MAAM,uBAAuB,GAAK,GAGvE,IAAK,CAACA,EAAQ,eAAiBA,EAAQ,gBAAkB,OAASC,EAAa,OAAS,EACtF,eAAQ,IAAI,gBAAgBA,EAAa,MAAM,cAAc,EACtD,KAAK,oBAAoBD,EAASC,CAAY,EAIvD,GAAI,CAACD,EAAQ,cACX,eAAQ,IAAI,iBAAiB,EACtBA,EAAQ,QAGjB,GAAI,CAEF,MAAME,EAAgB,KAAK,MAAMF,EAAQ,aAAa,EACtD,IAAIG,EAAmBH,EAAQ,QAE/B,QAAQ,IAAI,aAAa,OAAO,KAAKE,CAAa,EAAE,MAAM,UAAU,EAGpE,MAAMD,EAAeE,EAAiB,MAAM,qBAAqB,GAAK,CAAA,EACtE,QAAQ,IAAI,UAAWF,CAAY,EAGnC,UAAWG,KAAWF,EAAe,CACnC,GAAI,CAACE,EAAS,SAEd,MAAMC,EAAUH,EAAcE,CAAO,EAC/BE,EAAc,SAASF,CAAO,KAEpC,QAAQ,IAAI,QAAQA,CAAO,UAAUE,CAAW,UAAWD,CAAO,EAGlE,IAAIE,EACJ,GAAIP,EAAQ,KAAM,CAMhB,MAAMQ,EAAYH,EAAQ,WAAa,OAGvCE,EAAY,eAAeP,EAAQ,IAAI,IAAII,CAAO,GAAGI,CAAS,GAC9D,QAAQ,IAAI,OAAOJ,CAAO,eAAeI,CAAS,MAAMD,CAAS,EAAE,CAC7E,KAAe,CAEL,MAAME,EAAaJ,EAAQ,MAE3BE,GADeP,EAAQ,OAASA,EAAQ,OAAO,MAAM,GAAG,EAAI,IACzCS,CAAU,GAAK,GAE9BF,GAAa,CAACA,EAAU,WAAW,OAAO,IAC5CA,EAAY,eAAeA,CAAS,IAEtC,QAAQ,IAAI,OAAOH,CAAO,aAAaG,CAAS,EAAE,CACnD,CAGD,MAAMG,EAAU,aAAaH,CAAS,oCAAoC,OAAOF,EAAQ,KAAK,EAAI,CAAC,4CAGnG,GAAIF,EAAiB,SAASG,CAAW,EAEvCH,EAAmBA,EAAiB,QAAQG,EAAaI,CAAO,EAChE,QAAQ,IAAI,SAASJ,CAAW,KAAK,MAChC,CACL,QAAQ,KAAK,UAAUA,CAAW,EAAE,EAGpC,MAAMK,EAAiB,SAASP,CAAO,KAAK,QAAQ,MAAO,KAAK,EAAE,QAAQ,MAAO,KAAK,EAChFQ,EAAQ,IAAI,OAAOD,EAAgB,GAAG,EAExCC,EAAM,KAAKT,CAAgB,IAC7BA,EAAmBA,EAAiB,QAAQS,EAAOF,CAAO,EAC1D,QAAQ,IAAI,gBAAgB,EAE/B,CACF,CAGD,MAAMG,EAAwBV,EAAiB,MAAM,qBAAqB,GAAK,CAAA,EAC/E,OAAIU,EAAsB,OAAS,GACjC,QAAQ,KAAK,SAASA,EAAsB,MAAM,aAAcA,CAAqB,EAGhFV,CACR,OAAQW,EAAO,CACd,eAAQ,MAAM,YAAaA,CAAK,EACzBd,EAAQ,OAChB,CACF,EAQD,oBAAoBA,EAASC,EAAc,CACzC,GAAI,CAACA,GAAgB,CAACD,EAAS,OAAOA,EAAQ,QAG9C,GAAIA,EAAQ,eAAiB,OAAO,KAAK,KAAK,MAAMA,EAAQ,aAAa,CAAC,EAAE,OAAS,EACnF,eAAQ,IAAI,6BAA8BA,EAAQ,aAAa,EACxDA,EAAQ,QAGjB,QAAQ,IAAI,kBAAmBA,EAAQ,EAAE,EAGzC,MAAMe,EAAmB,wBACzB,IAAIC,EACAC,EAAQ,EACRC,EAAelB,EAAQ,QAE3B,MAAQgB,EAAQD,EAAiB,KAAKf,EAAQ,OAAO,KAAO,MAAM,CAChE,MAAMM,EAAcU,EAAM,CAAC,EACrBZ,EAAUY,EAAM,CAAC,EACvB,QAAQ,IAAI,SAASV,CAAW,UAAUF,CAAO,EAAE,EAGnD,IAAIG,EACAP,EAAQ,MAMVO,EAAY,eAAeP,EAAQ,IAAI,IAAII,CAAO,GAClD,QAAQ,IAAI,OAAOA,CAAO,mBAAmBG,CAAS,EAAE,IAIxDA,GADeP,EAAQ,OAASA,EAAQ,OAAO,MAAM,GAAG,EAAI,IACzCiB,CAAK,GAAK,GAEzBV,GAAa,CAACA,EAAU,WAAW,OAAO,IAC5CA,EAAY,eAAeA,CAAS,IAEtC,QAAQ,IAAI,OAAOH,CAAO,aAAaG,CAAS,EAAE,GAIpD,MAAMG,EAAU,kDAAkDH,CAAS,eAAeU,EAAQ,CAAC,kDAGnGC,EAAeA,EAAa,QAAQZ,EAAaI,CAAO,EACxDO,GACD,CAED,eAAQ,IAAI,eAAeA,CAAK,OAAO,EAChCC,CACR,CACH,EClKAC,EAAM,OAAO,OAAO,EAEpB,MAAKC,GAAU,CACb,KAAM,gBACN,OAAQ,CACN,MAAMC,EAAQC,GAAQ,EAChBtB,EAAUuB,EAAI,IAAI,EAClBC,EAAYD,EAAI,IAAI,EACpBE,EAAUF,EAAI,EAAI,EAClBG,EAAcH,EAAI,CAAE,CAAA,EACpBI,EAAyBJ,EAAI,EAAK,EAClCpB,EAAmBoB,EAAI,EAAE,EACzBK,EAAkBL,EAAI,CAAE,CAAA,EACxBM,EAAiBN,EAAI,EAAK,EAC1BO,EAAqBP,EAAI,EAAK,EAC9BQ,EAAkBR,EAAI,EAAK,EAG3BS,EAAeC,EAAS,IAAM,OAClC,OAAIC,EAAAlC,EAAQ,QAAR,MAAAkC,EAAe,SACVlC,EAAQ,MAAM,SAAS,MAAM,GAAG,EAAE,IAAImC,GAAKA,EAAE,KAAM,CAAA,EAAE,OAAOA,GAAKA,CAAC,EAEpE,CAAE,CACX,CAAC,EAGKC,EAAcC,GAAY,CAC9B,GAAI,CAACA,EACH,eAAQ,IAAI,QAASA,CAAO,EACrB,OAET,GAAI,CACF,MAAMC,EAAgBnB,EAAMkB,CAAO,EAAE,OAAO,qBAAqB,EACjE,eAAQ,IAAI,SAAUA,EAAS,KAAMC,CAAa,EAC3CA,CACP,OAAOxB,EAAO,CACd,eAAQ,MAAM,WAAYA,EAAOuB,CAAO,EACjCA,CACT,CACF,EAEME,EAAc,SAAY,iBAC9B,GAAI,CACF,QAAQ,IAAI,gBAAiBlB,EAAM,OAAO,EAAE,EAC5C,MAAMmB,EAAW,MAAMC,EAAM,KAAK,+BAAgC,CAChE,IAAKpB,EAAM,OAAO,EACpB,CAAC,EACD,GAAImB,EAAS,KAAM,CAEjBxC,EAAQ,MAAQ,CACd,GAAGwC,EAAS,KACZ,OAAQA,EAAS,KAAK,QAAU,KAChC,YAAaA,EAAS,KAAK,aAAe,KAC1C,YAAaA,EAAS,KAAK,aAAe,KAC1C,QAASA,EAAS,KAAK,SAAW,KAClC,SAAUA,EAAS,KAAK,UAAY,IACtC,EACA,QAAQ,IAAI,QAASxC,EAAQ,KAAK,EAG9BA,EAAQ,MAAM,UAChB,QAAQ,IAAI,SAAUA,EAAQ,MAAM,QAAQ,EAC5C,QAAQ,IAAI,SAAUA,EAAQ,MAAM,SAAS,MAAM,GAAG,CAAC,GAEvD,QAAQ,KAAK,SAAS,EAIxB,QAAQ,IAAI,yBAA0BA,EAAQ,MAAM,aAAa,EAGjE,MAAMC,EAAgBD,EAAQ,MAAM,QAAQ,MAAM,qBAAqB,GAAK,GAI5E,GAHA,QAAQ,IAAI,SAASC,EAAa,MAAM,SAAS,EAG7CD,EAAQ,MAAM,cAAe,CAC/B,QAAQ,IAAI,mBAAmB,EAC/B,GAAI,CAEF,MAAM0C,EAAW,KAAK,MAAM1C,EAAQ,MAAM,aAAa,EACvD,QAAQ,IAAI,YAAa0C,CAAQ,EAGjC,MAAMC,GAAoB3C,EAAQ,MAAM,QAAQ,MAAM,qBAAqB,GAAK,CAAA,GAAI,OACpF,QAAQ,IAAI,WAAW2C,CAAgB,SAAS,EAEhDxC,EAAiB,MAAQJ,EAAwB,sBAAsBC,EAAQ,KAAK,CACpF,OAAOc,EAAO,CACd,QAAQ,MAAM,aAAcA,CAAK,EACjCX,EAAiB,MAAQH,EAAQ,MAAM,OACzC,CACF,MAAWC,EAAa,OAAS,GAE/B,QAAQ,IAAI,wBAAwB,EACpCE,EAAiB,MAAQJ,EAAwB,oBAAoBC,EAAQ,MAAOC,CAAY,IAEhG,QAAQ,IAAI,iBAAiB,EAC7BE,EAAiB,MAAQH,EAAQ,MAAM,SAIzC,MAAM4C,EAAe,EAGrB,MAAMC,EAAiB,EAGnB7C,EAAQ,MAAM,IAChB,MAAM8C,EAAoB9C,EAAQ,MAAM,EAAE,CAE9C,CACA,OAAOc,EAAO,CACd,QAAQ,MAAM,UAAWA,CAAK,EAC9B,QAAQ,MAAM,UAAUoB,EAAApB,EAAM,SAAN,YAAAoB,EAAc,GAAG,EACzC,QAAQ,MAAM,SAASa,EAAAjC,EAAM,SAAN,YAAAiC,EAAc,MAAM,EAC3C,QAAQ,MAAM,UAAUC,GAAAC,EAAAnC,EAAM,WAAN,YAAAmC,EAAgB,UAAhB,YAAAD,EAAyB,KAAK,EACtD,QAAQ,MAAM,UAASE,EAAApC,EAAM,WAAN,YAAAoC,EAAgB,OAAQpC,EAAM,OAAO,EAC5DqC,EAAU,MAAM,aAAaC,EAAAtC,EAAM,WAAN,YAAAsC,EAAgB,OAAQtC,EAAM,QAAQ,CACrE,QAAU,CACRW,EAAQ,MAAQ,EAClB,CACF,EAEMmB,EAAgB,SAAY,CAChC,GAAI,GAAC5C,EAAQ,OAAS,CAACA,EAAQ,MAAM,IAErC,GAAI,CAEF,GAAI,CAACA,EAAQ,MAAM,KAAM,CACvB,QAAQ,KAAK,uBAAuB,EAEpC,GAAI,CACF,MAAMwC,EAAW,MAAMC,EAAM,IAAI,sBAAsBzC,EAAQ,MAAM,EAAE,EAAE,EACzE,GAAIwC,EAAS,MAAQA,EAAS,KAAK,SAAU,CAC3ChB,EAAU,MAAQgB,EAAS,KAAK,SAChC,QAAQ,IAAI,gBAAiBhB,EAAU,KAAK,EAC5C,MACF,CACA,OAAO6B,EAAK,CACZ,QAAQ,KAAK,gBAAiBA,CAAG,CACnC,CACF,CAEA,GAAI,CAACrD,EAAQ,MAAM,OAAQ,CACzB,QAAQ,KAAK,UAAU,EACvB,MACF,CAGA,MAAMsD,EAAatD,EAAQ,MAAM,OAAO,MAAM,GAAG,EACjD,GAAIsD,EAAW,SAAW,EAAG,CAC3B,QAAQ,KAAK,UAAU,EACvB,MACF,CAGA,MAAMC,EAAiBD,EAAW,CAAC,EAGnC,GAAIC,EAAe,SAAS,GAAG,EAAG,CAEhC,MAAMC,EAAW,eAAeD,CAAc,GAC9C,QAAQ,IAAI,gBAAiBC,CAAQ,EACrChC,EAAU,MAAQgC,OAGlB,QAAQ,IAAI,aAAcD,CAAc,EAEpCA,GAAkB,CAACA,EAAe,WAAW,OAAO,GACtD/B,EAAU,MAAQ,uBAAuB+B,CAAc,GACvD,QAAQ,IAAI,sBAAuB/B,EAAU,KAAK,GAElDA,EAAU,MAAQ+B,CAGtB,OAAOzC,EAAO,CACd,QAAQ,KAAK,YAAaA,CAAK,CAEjC,CACF,EAEM+B,EAAkB,SAAY,CAClC,GAAI,GAAC7C,EAAQ,OAAS,CAACA,EAAQ,MAAM,IAErC,GAAI,CACF,MAAMwC,EAAW,MAAMC,EAAM,IAAI,qBAAqBzC,EAAQ,MAAM,EAAE,EAAE,EACpEwC,EAAS,MAAQA,EAAS,KAAK,OACjCd,EAAY,MAAQc,EAAS,KAAK,KAEpC,OAAO1B,EAAO,CACd,QAAQ,KAAK,YAAaA,CAAK,CAEjC,CACF,EAEMgC,EAAsB,MAAOW,GAAc,CAC/C,GAAI,CACF,MAAMjB,EAAW,MAAMC,EAAM,IAAI,iBAAiBgB,CAAS,UAAU,EACjEjB,EAAS,MAAQA,EAAS,KAAK,UACjCZ,EAAgB,MAAQY,EAAS,KAAK,iBAAmB,CAAE,EAC3D,QAAQ,IAAI,MAAMZ,EAAgB,MAAM,MAAM,OAAO,EAEvD,OAAOd,EAAO,CACd,QAAQ,KAAK,YAAaA,CAAK,CAEjC,CACF,EAEM4C,EAAuB,SAAY,SACvC,GAAI,CAAC1D,EAAQ,OAAS,CAACA,EAAQ,MAAM,GAAI,CACvCmD,EAAU,QAAQ,iBAAiB,EACnC,MACF,CAEAtB,EAAe,MAAQ,GACvB,GAAI,CACF,MAAMW,EAAW,MAAMC,EAAM,KAAK,iBAAiBzC,EAAQ,MAAM,EAAE,gBAAgB,EAEnF,GAAIwC,EAAS,MAAQA,EAAS,KAAK,QAAS,CAC1C,MAAMmB,EAAQnB,EAAS,KAAK,OAAS,EAEjCmB,EAAQ,GACVR,EAAU,QAAQ,OAAOQ,CAAK,OAAO,EAErC,MAAMb,EAAoB9C,EAAQ,MAAM,EAAE,GAE1CmD,EAAU,KAAK,SAAS,OAG1BA,EAAU,MAAM,aAAeX,EAAS,KAAK,SAAW,OAAO,CAEjE,OAAO1B,EAAO,CACd,QAAQ,MAAM,YAAaA,CAAK,EAChCqC,EAAU,MAAM,eAAeJ,GAAAb,EAAApB,EAAM,WAAN,YAAAoB,EAAgB,OAAhB,YAAAa,EAAsB,UAAWjC,EAAM,QAAQ,CAChF,QAAU,CACRe,EAAe,MAAQ,EACzB,CACF,EAEM+B,EAAc,IAAM,CACxB,GAAI,CAAC5D,EAAQ,MAAO,CAClBmD,EAAU,QAAQ,SAAS,EAC3B,MACF,CAGA,IAAIU,EAAM7D,EAAQ,MAAM,UAQxB,IALI,CAAC6D,GAAOA,IAAQ,kBAClBA,EAAM7D,EAAQ,MAAM,KAIlB,CAAC6D,GAAOA,IAAQ,gBAAkBA,EAAI,KAAK,IAAM,GAAI,CACvDV,EAAU,QAAQ,aAAa,EAC/B,MACF,CAEA,QAAQ,IAAI,QAASU,CAAG,EACxB,GAAI,CAEF,IAAI,IAAIA,CAAG,EACX,OAAO,KAAKA,EAAK,QAAQ,CACzB,OAAO/C,EAAO,CACd,QAAQ,MAAM,YAAa+C,EAAK/C,CAAK,EACrCqC,EAAU,MAAM,WAAW,CAC7B,CACF,EAEMW,EAAkB,SAAY,SAClC,GAAI,CAAC9D,EAAQ,OAAS,CAACA,EAAQ,MAAM,GAAI,CACvCmD,EAAU,QAAQ,eAAe,EACjC,MACF,CAEAxB,EAAuB,MAAQ,GAC/B,GAAI,CACF,MAAMa,EAAW,MAAMC,EAAM,KAAK,iBAAiBzC,EAAQ,MAAM,EAAE,YAAY,EAE3EwC,EAAS,KAAK,SAChBxC,EAAQ,MAAM,QAAUwC,EAAS,KAAK,QAElCA,EAAS,KAAK,WAChBxC,EAAQ,MAAM,SAAWwC,EAAS,KAAK,UAGrCA,EAAS,KAAK,WAChBW,EAAU,KAAK,SAAS,GAExBA,EAAU,QAAQ,QAAQ,EAGtBX,EAAS,KAAK,qBAAuB,GACvC,MAAMM,EAAoB9C,EAAQ,MAAM,EAAE,IAI9CmD,EAAU,MAAM,UAAYX,EAAS,KAAK,OAAO,CAEnD,OAAO1B,EAAO,CACd,QAAQ,MAAM,UAAWA,CAAK,EAC9BqC,EAAU,MAAM,aAAaJ,GAAAb,EAAApB,EAAM,WAAN,YAAAoB,EAAgB,OAAhB,YAAAa,EAAsB,UAAWjC,EAAM,QAAQ,CAC9E,QAAU,CACRa,EAAuB,MAAQ,EACjC,CACF,EAGMoC,EAA+B,SAAY,SAC/C,GAAI,CAAC/D,EAAQ,OAAS,CAACA,EAAQ,MAAM,GAAI,CACvCmD,EAAU,QAAQ,qBAAqB,EACvC,MACF,CAEApB,EAAgB,MAAQ,GACxB,GAAI,CAEF,MAAMS,EAAW,MAAMC,EAAM,KAAK,iBAAiBzC,EAAQ,MAAM,EAAE,uBAAuB,EAEtFwC,EAAS,KAAK,SAChBxC,EAAQ,MAAM,QAAUwC,EAAS,KAAK,QAElCA,EAAS,KAAK,WAChBxC,EAAQ,MAAM,SAAWwC,EAAS,KAAK,UAGzCW,EAAU,QAAQ,cAAc,EAG5BX,EAAS,KAAK,qBAAuB,IACvC,MAAMM,EAAoB9C,EAAQ,MAAM,EAAE,EAC1CmD,EAAU,KAAK,MAAMX,EAAS,KAAK,oBAAoB,OAAO,IAGhEW,EAAU,MAAM,UAAYX,EAAS,KAAK,OAAO,CAEnD,OAAO1B,EAAO,CACd,QAAQ,MAAM,gBAAiBA,CAAK,EACpCqC,EAAU,MAAM,aAAaJ,GAAAb,EAAApB,EAAM,WAAN,YAAAoB,EAAgB,OAAhB,YAAAa,EAAsB,UAAWjC,EAAM,QAAQ,CAC9E,QAAU,CACRiB,EAAgB,MAAQ,EAC1B,CACF,EAEMiC,EAAmB,SAAY,SACnC,GAAI,CAAChE,EAAQ,OAAS,CAACA,EAAQ,MAAM,GAAI,CACvCmD,EAAU,QAAQ,gBAAgB,EAClC,MACF,CAEArB,EAAmB,MAAQ,GAC3B,GAAI,CACF,MAAMU,EAAW,MAAMC,EAAM,KAAK,iBAAiBzC,EAAQ,MAAM,EAAE,oBAAoB,EAEnFwC,EAAS,KAAK,SAChBxC,EAAQ,MAAM,SAAWwC,EAAS,KAAK,SACvCW,EAAU,QAAQ,SAAS,EAGvBX,EAAS,KAAK,qBAAuB,IACvC,MAAMM,EAAoB9C,EAAQ,MAAM,EAAE,EAC1CmD,EAAU,KAAK,MAAMX,EAAS,KAAK,oBAAoB,OAAO,IAGhEW,EAAU,MAAM,WAAaX,EAAS,KAAK,OAAO,CAEpD,OAAO1B,EAAO,CACd,QAAQ,MAAM,WAAYA,CAAK,EAC/BqC,EAAU,MAAM,cAAcJ,GAAAb,EAAApB,EAAM,WAAN,YAAAoB,EAAgB,OAAhB,YAAAa,EAAsB,UAAWjC,EAAM,QAAQ,CAC/E,QAAU,CACRgB,EAAmB,MAAQ,EAC7B,CACF,EAEMmC,EAAsBJ,GAAQ,CAClC,GAAI,CAACA,EAAK,CACRV,EAAU,QAAQ,SAAS,EAC3B,QAAQ,MAAM,QAAQ,EACtB,MACF,CAEA,QAAQ,IAAI,YAAaU,CAAG,EAG5B,GAAI,CAEF,IAAIK,EAAWL,EAef,GAZIK,EAAS,SAAS,OAAO,IAC3BA,EAAWA,EAAS,QAAQ,SAAU,GAAG,EACzC,QAAQ,IAAI,cAAeA,CAAQ,GAIjCA,EAAS,WAAW,YAAY,IAClCA,EAAW,2BAA6BA,EACxC,QAAQ,IAAI,cAAeA,CAAQ,GAIjCA,EAAS,SAAS,4BAA4B,EAAG,CACnD,QAAQ,IAAI,gBAAiBA,CAAQ,EAErC,OAAO,KAAKA,EAAU,QAAQ,EAC9B,MACF,CAGA,GAAIA,EAAS,SAAS,MAAM,EAC1B,GAAI,CAEF,MAAMC,EAAWD,EAAS,MAAM,aAAa,EAC7C,GAAIC,GAAYA,EAAS,CAAC,EAAG,CAC3B,IAAIC,EAAY,mBAAmBD,EAAS,CAAC,CAAC,EAC9C,QAAQ,IAAI,gBAAiBC,CAAS,EAGlC,CAACA,EAAU,WAAW,MAAM,IAC3BA,EAAU,SAAS,kBAAkB,GACrCA,EAAU,SAAS,eAAe,KACrCA,EAAY,WAAaA,EACzB,QAAQ,IAAI,mBAAoBA,CAAS,GAG3CF,EAAWE,CACb,CACF,OAASC,EAAG,CACV,QAAQ,KAAK,cAAeA,CAAC,CAC/B,CAIE,CAACH,EAAS,WAAW,SAAS,GAAK,CAACA,EAAS,WAAW,UAAU,IACpEA,EAAW,WAAaA,EACxB,QAAQ,IAAI,YAAaA,CAAQ,GAInC,IAAI,IAAIA,CAAQ,EAGZA,EAAS,SAAS,kBAAkB,GACtCf,EAAU,CACR,QAAS,qBACT,KAAM,UACN,SAAU,GACZ,CAAC,EAIH,QAAQ,IAAI,WAAYe,CAAQ,EAChC,OAAO,KAAKA,EAAU,QAAQ,CAC9B,OAAOpD,EAAO,CAId,GAHA,QAAQ,MAAM,YAAa+C,EAAK/C,CAAK,EAGjC+C,EAAI,SAAS,kBAAkB,GAAKA,EAAI,SAAS,OAAO,EAAG,CAC7D,QAAQ,IAAI,eAAgBA,CAAG,EAC/BV,EAAU,CACR,QAAS,qBACT,KAAM,UACN,SAAU,GACZ,CAAC,EACD,OAAO,KAAK,2BAA4B,QAAQ,EAChD,MACF,CAEAA,EAAU,MAAM,WAAW,CAC7B,CACF,EAEA,OAAAmB,EAAU,IAAM,CACd/B,EAAW,CACZ,CAAA,EAEM,CACL,QAAAvC,EACA,YAAA4D,EACA,WAAAxB,EACA,UAAAZ,EACA,QAAAC,EACA,YAAAC,EACA,gBAAAoC,EACA,uBAAAnC,EACA,iBAAAxB,EACA,gBAAAyB,EACA,eAAAC,EACA,qBAAA6B,EACA,aAAA1B,EACA,iBAAAgC,EACA,mBAAAlC,EACA,6BAAAiC,EACA,gBAAAhC,EACA,mBAAAkC,CACF,CACF,CACF,MA3fA,IAAA,EA+fO,MAAM,kBAGAM,GAAA,CAAA,MAAM,gBAAgB,EAEpBC,GAAA,CAAA,MAAM,cAAc,MApgBnC,IAAA,CAAA,MAAA,IAAA,CAAA,MAAA,IAAA,EAohByC,MAAM,oBAphB/C,IAAA,EAkiB4B,MAAM,sBAliBlCC,GAAA,CAAA,KAAA,MAAA,IAAA,EAsiBkC,MAAM,mBAE3BC,GAAA,CAAA,MAAM,iBAAiB,MAxiBpC,IAAA,EAyiBqC,MAAM,2BAziB3C,IAAA,EAsjBoB,MAAM,2BAYb,MAAM,qBAAqB,MAAA,CAAyB,aAAA,MAAA,OAlkBjE,IAAA,EA+kBkB,MAAM,4BA/kBxBC,GAAA,CAAA,WAAA,MAAA,IAAA,EA6lByC,MAAM,oBAEnCC,GAAA,CAAA,MAAM,sBAAsB,EA/lBxCC,GAAA,CAAA,OAAA,SAAA,MAAA,IAAA,EAwmB8C,MAAM,qBAAqB,MAAA,CAAsB,QAAA,MAAA,GAMpFC,GAAA,CAAA,MAAM,gBAAgB,wGA/GGC,EAAO,SAAzCC,IAAAC,EAyHM,MAzHNC,GAyHM,CAxHJC,EAuHUC,EAAA,KAAA,CAtHG,SACT,IA6BM,CA7BNC,EA6BM,MA7BNd,GA6BM,CA5BJc,EAA4B,KAAA,KAAAC,EAArBP,EAAO,QAAC,KAAK,EAAA,CAAA,EAngB9BQ,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,EAAA,GAogBUH,EAeM,MAfNb,GAeM,CAdJa,EAA4C,OAAtC,KAAA,MAAMC,EAAAP,EAAA,QAAQ,QAAM,IAAA,EAAA,CAAA,EArgBtCQ,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,EAAA,GAsgBYH,EAAkD,OAA5C,KAAA,OAAOC,EAAAP,EAAA,QAAQ,aAAW,IAAA,EAAA,CAAA,EAtgB5CQ,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,EAAA,GAugBYH,EAWO,OAAA,KAAA,CAlhBnBE,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,EAugBkB;AAAA,eACJ,GAAYT,EAAA,QAAQ,aAApBC,IAAAC,EAQO,OAhhBrBQ,GAAA,CAAAD,EAAAF,EAygBmBP,aAAWA,EAAA,QAAQ,WAAW,GAAI,IACrC,CAAA,EAAAI,EAKaO,EAAA,CALD,OAAO,OAAO,UAAU,QACvB,UAAQ,IACZ,CA5gBzBF,EA2gBqC;AAAA,2BACZF,EAAGP,EAAO,QAAC,WAAW,EAAA,CAAA,IA5gB/C,QAAAY,EA6gB6B,IACX,CA9gBlBJ,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,EAAA,eA8gBkBH,EAAsD,IAAA,CAAnD,MAAM,eAAe,MAAA,CAAyB,cAAA,KAAA,eA9gBnE,EAAA,YAihBcJ,EAAwB,OAjhBtCW,GAihB2B,MAAI,OAjhB/BL,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,EAAA,GAohBqBT,EAAA,YAAY,QAAvBC,IAAAC,EAUM,MAVNY,GAUM,EATJb,EAAA,EAAA,EAAAC,EAQSa,EA7hBrB,KAAAC,EAshB4BhB,EAAW,YAAlBiB,QADTC,EAQSC,EAAA,CANN,IAAKF,EACN,KAAK,UACL,OAAO,QACP,MAAM,aA1hBpB,QAAAL,EA4hBc,IAAS,CA5hBvBH,EAAAF,EA4hBiBU,CAAG,EAAA,CAAA,IA5hBpB,EAAA,oBAAAG,EAAA,GAAA,EAAA,MAAA,QAAAR,EAgiBiB,IAEX,CAliBNJ,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAC,EAAA,GAkiBiBT,EAAS,WAApBC,IAAAC,EAEM,MAFNmB,GAEM,CADJf,EAAmC,MAAA,CAA7B,IAAKN,EAAS,UAAE,IAAI,MAniBlC,EAAA,KAAA,EAAAN,EAAA,KAAA0B,EAAA,GAAA,EAAA,EAAAZ,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAC,EAAA,GAsiBiBT,EAAA,QAAQ,SAAnBC,IAAAC,EAuCM,MAvCNoB,GAuCM,CAtCJd,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAF,EAAa,UAAT,OAAI,EAAA,GAviBhBE,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAC,EAAA,GAwiBQH,EAAwD,MAAxDX,GAAgCY,EAAAP,EAAA,QAAQ,OAAO,EAAA,CAAA,EAxiBvDQ,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAC,EAAA,GAyiBmBT,EAAA,QAAQ,UAAnBC,IAAAC,EAYM,MAZNqB,GAYM,CAXJf,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAF,EAAwC,OAAlC,CAAA,MAAM,gBAAgB,EAAC,OAAI,EAAA,GA1iB3CE,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAC,EAAA,IA2iBUR,EAAA,EAAA,EAAAC,EASSa,EApjBnB,KAAAC,EA4iB8BhB,EAAY,aAAvBwB,QADTN,EASSC,EAAA,CAPN,IAAKK,EACN,KAAK,UACL,OAAO,QACP,MAAM,eACN,KAAK,UAjjBjB,QAAAZ,EAmjBY,IAAa,CAnjBzBH,EAAAF,EAmjBeiB,CAAO,EAAA,CAAA,IAnjBtB,EAAA,qBAsjBQvB,IAAAC,EAUM,MAVNuB,GAUM,CATJrB,EAQYsB,EAAA,CAPV,KAAK,UACJ,QAAO1B,EAAgB,iBACvB,QAASA,EAAkB,mBAC5B,KAAK,QACL,MAAA,KA5jBZ,QAAAY,EA6jBW,IAEDJ,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CA/jBVC,EA6jBW;AAAA;AAAA,WAED,KA/jBV,EAAA,+BAAAD,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAC,EAAA,GAkkBQH,EAUM,MAVNqB,GAUM,CATJvB,EAQYsB,EAAA,CAPV,KAAK,UACJ,QAAO1B,EAA4B,6BACnC,QAASA,EAAe,gBACzB,KAAK,QACL,MAAA,KAxkBZ,QAAAY,EAykBW,IAEDJ,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CA3kBVC,EAykBW;AAAA;AAAA,WAED,KA3kBV,EAAA,kCA+kBMR,IAAAC,EASM,MATN0B,GASM,CARJxB,EAOYsB,EAAA,CANV,KAAK,UACJ,QAAO1B,EAAe,gBACtB,QAASA,EAAsB,uBAChC,MAAA,KAplBV,QAAAY,EAqlBS,IAEDJ,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CAvlBRC,EAqlBS;AAAA;AAAA,SAED,KAvlBR,EAAA,+BAAAD,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAC,EAAA,GA0lBMH,EAA6D,MAAA,CAAxD,MAAM,kBAAkB,UAAQN,EAAgB,gBA1lB3D,EAAA,KAAA,EAAAJ,EAAA,EAAAY,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAC,EAAA,GAAAD,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAC,EAAA,GA6lBiBT,EAAA,gBAAgB,QAA3BC,IAAAC,EAeM,MAfN2B,GAeM,CAdJrB,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAF,EAAa,UAAT,OAAI,EAAA,GA9lBhBE,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAC,EAAA,GA+lBQH,EAYK,KAZLT,GAYK,EAXHI,EAAA,EAAA,EAAAC,EAUKa,EA1mBf,KAAAC,EAgmBgChB,EAAe,gBAA1B/E,QAAXiF,EAUK,KAAA,CAVmC,IAAKjF,EAAQ,GAAI,MAAM,yBAC7DqF,EAQI,IAAA,CAPD,KAAMrF,EAAQ,WACf,OAAO,SACP,MAAM,uBACL,QArmBf6G,EAqmB8BC,GAAA/B,EAAA,mBAAmB/E,EAAQ,UAAU,EAAA,CAAA,SAAA,CAAA,IArmBnEwF,EAAAF,EAumBiBtF,EAAQ,OAAK,MAAA,EAAa,IAC7B,CAAA,EAAYA,EAAQ,YAApBgF,EAAA,EAAAC,EAAiH,OAAjH8B,GAAqFzB,EAAAtF,EAAQ,UAAU,EAAA,CAAA,GAxmBrHmG,EAAA,GAAA,EAAA,CAAA,EAAA,EAAAtB,EAAA,iBAAAsB,EAAA,GAAA,EAAA,EAAAZ,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAC,EAAA,GA8mBMH,EAQM,MARNP,GAQM,CAPJK,EAEYsB,EAAA,CAFD,KAAK,UAAW,QAAO1B,EAAW,cA/mBrD,QAAAY,EAgnBU,IAAyC,CAhnBnDH,EAgnBaF,EAAAP,EAAA,QAAQ,UAAS,OAAA,MAAA,EAAA,CAAA,IAhnB9B,EAAA,kBAAAQ,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAC,EAAA,GAmnB0BT,EAAA,gBAAgB,OAnnB1CoB,EAAA,GAAA,EAAA,OAmnBQF,EAEYQ,EAAA,CArnBpB,IAAA,EAmnBkD,KAAK,OAAQ,QAAO1B,EAAoB,qBAAG,QAASA,EAAc,iBAnnBpH,QAAAY,EAmnBsH,IAE9GJ,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CArnBRC,EAmnBsH;AAAA;AAAA,SAE9G,KArnBR,EAAA,iCAAA,EAAA,OAAAW,EAAA,GAAA,EAAA"}