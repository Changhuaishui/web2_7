{"version":3,"file":"Home-hA2KkkB6.js","sources":["../../src/views/Home.vue"],"sourcesContent":["<script>\nimport { ref, onMounted } from 'vue'\nimport axios from 'axios'\nimport { ElMessage, ElMessageBox, ElLoading } from 'element-plus'\nimport dayjs from 'dayjs'\nimport 'dayjs/locale/zh-cn'\nimport { useRouter } from 'vue-router'\n\ndayjs.locale('zh-cn')\n\nexport default {\n  name: 'Home',\n  setup() {\n    const crawlerForm = ref({\n      url: ''\n    })\n    const crawling = ref(false)\n    const searchKeyword = ref('')\n    const articles = ref([])\n    const router = useRouter()\n    const articleImages = ref({}) // 用于存储文章头图URL\n    const tags = ref([]) // 所有可用标签\n    const selectedTag = ref('全部') // 当前选中的标签\n    const filteredArticles = ref([]) // 经过标签筛选后的文章\n    const rebuildingIndex = ref(false) // 重建索引状态\n\n    // 爬取文章\n    const crawlArticle = async () => {\n      if (!crawlerForm.value.url) {\n        ElMessage.warning('请输入文章URL')\n        return\n      }\n\n      crawling.value = true\n      try {\n        // 先检查链接状态\n        const checkResponse = await axios.post('/api/crawler/check-link', {\n          url: crawlerForm.value.url\n        })\n        \n        // 如果链接已经爬取过\n        if (checkResponse.data.status === 'already_exists') {\n          ElMessage.info('该文章已经爬取过，无需重复爬取')\n          crawlerForm.value.url = ''\n          await loadArticles() // 刷新列表\n          return\n        }\n        \n        // 如果链接无效\n        if (checkResponse.data.status === 'invalid') {\n          ElMessage.error('链接无效或已失效，无法爬取，可能是临时链接已过期')\n          return\n        }\n        \n        // 链接有效，开始爬取\n        const response = await axios.post('/api/crawler/crawl', {\n          url: crawlerForm.value.url\n        })\n        ElMessage.success(response.data)\n        crawlerForm.value.url = ''\n        loadArticles() // 重新加载文章列表\n      } catch (error) {\n        console.error('爬取失败:', error)\n        if (error.response?.data) {\n          ElMessage.error(error.response.data)\n        } else {\n          ElMessage.error('爬取失败：' + error.message)\n        }\n      } finally {\n        crawling.value = false\n      }\n    }\n\n    // 搜索文章\n    const searchArticles = async () => {\n      try {\n        if (!searchKeyword.value.trim()) {\n          await loadArticles();\n          return;\n        }\n        const response = await axios.get(`/api/search?keyword=${encodeURIComponent(searchKeyword.value.trim())}`);\n        console.log('搜索结果响应:', response);\n        console.log('搜索结果数据:', response.data);\n        articles.value = response.data;\n        filteredArticles.value = response.data; // 确保搜索结果也更新到filteredArticles\n        if (articles.value.length === 0) {\n          ElMessage.info('未找到匹配的文章');\n        } else {\n          console.log(`找到${articles.value.length}条搜索结果`);\n        }\n      } catch (error) {\n        console.error('搜索失败:', error);\n        ElMessage.error('搜索失败：' + (error.response?.data || error.message));\n      }\n    }\n\n    // 加载所有文章\n    const loadArticles = async () => {\n      try {\n        const response = await axios.get('/api/crawler/articles')\n        console.log('API返回的完整数据:', response);\n        console.log('文章数据:', response.data);\n        if (response.data && response.data.length > 0) {\n          console.log('第一篇文章的时间:', response.data[0].publishTime);\n        }\n        articles.value = response.data;\n        filteredArticles.value = response.data; // 初始时显示所有文章\n        \n        // 加载每篇文章的头图\n        for (const article of articles.value) {\n          loadArticleImage(article.id);\n        }\n      } catch (error) {\n        console.error('加载文章失败:', error);\n        ElMessage.error('加载文章失败')\n      }\n    }\n    \n    // 加载文章头图\n    const loadArticleImage = async (articleId) => {\n      if (!articleId) return;\n      \n      try {\n        // 查找指定ID的文章\n        const article = articles.value.find(a => a.id === articleId);\n        if (!article) {\n          console.warn(`未找到ID为${articleId}的文章`);\n          return;\n        }\n        \n        // 检查文章是否有ULID\n        if (!article.ulid) {\n          console.warn(`文章ID=${articleId}没有ULID，尝试使用旧API获取头图`);\n          // 尝试使用旧的API获取头图\n          try {\n            const response = await axios.get(`/api/crawler/image/${articleId}`);\n            if (response.data && response.data.imageUrl) {\n              articleImages.value[articleId] = response.data.imageUrl;\n              console.log(`文章${articleId}使用旧API获取头图成功:`, response.data.imageUrl);\n              return;\n            }\n          } catch (err) {\n            console.warn(`文章${articleId}使用旧API获取头图失败:`, err);\n          }\n        }\n        \n        // 解析文章的图片路径\n        if (article.images && article.images.trim()) {\n          // 取第一张图片作为头图\n          const imagePaths = article.images.split(',');\n          if (imagePaths.length > 0) {\n            const firstImagePath = imagePaths[0];\n            \n            // 检查是否是ULID格式的路径\n            if (firstImagePath.includes('/')) {\n              // 路径形如：articleUlid/imageUlid.jpg\n              // 直接使用该路径\n              const imageUrl = `/api/images/${firstImagePath}`;\n              console.log(`文章${articleId}使用新API路径获取头图: ${imageUrl}`);\n              articleImages.value[articleId] = imageUrl;\n            } else {\n              // 旧格式，使用兼容API\n              console.log(`文章${articleId}使用旧API路径获取头图: ${firstImagePath}`);\n              // 确保旧格式路径也使用正确的API前缀\n              if (firstImagePath && !firstImagePath.startsWith('/api/')) {\n                articleImages.value[articleId] = `/api/crawler/images/${firstImagePath}`;\n                console.log(`文章${articleId}使用旧格式图片路径(修正API前缀):`, articleImages.value[articleId]);\n              } else {\n                articleImages.value[articleId] = firstImagePath;\n              }\n            }\n          }\n        } else {\n          console.warn(`文章ID=${articleId}没有图片`);\n        }\n      } catch (error) {\n        console.warn(`无法加载文章${articleId}的头图:`, error);\n        // 如果加载失败，静默处理，不显示图片即可\n      }\n    }\n\n    // 加载所有可用标签\n    const loadTags = async () => {\n      try {\n        const response = await axios.get('/api/tags');\n        tags.value = ['全部', ...response.data];\n      } catch (error) {\n        console.error('加载标签失败:', error);\n        ElMessage.error('加载标签失败');\n      }\n    }\n    \n    // 根据标签筛选文章\n    const filterByTag = async (tag) => {\n      selectedTag.value = tag;\n      \n      try {\n        if (tag === '全部') {\n          filteredArticles.value = articles.value;\n        } else {\n          const response = await axios.get(`/api/tags/filter?tag=${encodeURIComponent(tag)}`);\n          filteredArticles.value = response.data;\n        }\n      } catch (error) {\n        console.error('根据标签筛选文章失败:', error);\n        ElMessage.error('筛选文章失败');\n      }\n    }\n\n    // 格式化日期时间\n    const formatDate = (dateStr) => {\n      if (!dateStr) {\n        console.log('时间为空:', dateStr);\n        return '暂无时间';\n      }\n      try {\n        const formattedDate = dayjs(dateStr).format('YYYY-MM-DD HH:mm:ss');\n        console.log('格式化时间:', dateStr, '->', formattedDate);\n        return formattedDate;\n      } catch (error) {\n        console.error('时间格式化错误:', error, dateStr);\n        return dateStr;\n      }\n    }\n\n    // 打开文章链接\n    const openArticle = (article) => {\n      if (!article) {\n        ElMessage.warning('无效的文章数据');\n        return;\n      }\n\n      console.log('文章数据:', article);\n      console.log('原文链接:', article.sourceUrl);\n      console.log('文章链接:', article.url);\n\n      // 优先使用原文链接\n      let url = article.sourceUrl;\n      \n      // 如果原文链接无效，使用文章URL\n      if (!url || url === 'javascript:;' || url === 'javascript:void(0);' || url.trim() === '') {\n        console.log('原文链接无效，使用文章URL');\n        url = article.url;\n      }\n\n      // 验证URL是否有效\n      if (!url || url === 'javascript:;' || url === 'javascript:void(0);' || url.trim() === '') {\n        console.log('无效的URL:', url);\n        ElMessage.warning('无法获取有效的文章链接');\n        return;\n      }\n\n      // 确保URL是以http或https开头\n      if (!url.startsWith('http://') && !url.startsWith('https://')) {\n        url = 'https://' + url;\n      }\n\n      console.log('最终使用的链接:', url);\n      try {\n        // 验证URL格式\n        new URL(url);\n        window.open(url, '_blank');\n      } catch (error) {\n        console.error('无效的URL格式:', url, error);\n        ElMessage.error('无效的文章链接格式');\n      }\n    }\n\n    // 删除文章\n    const deleteArticle = async (article) => {\n      try {\n        if (!article || !article.url) {\n          ElMessage.error('无效的文章数据');\n          return;\n        }\n\n        const confirmResult = await ElMessageBox.confirm(\n          `确定要删除文章\"${article.title}\"吗？`,\n          '删除确认',\n          {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }\n        );\n\n        if (confirmResult !== 'confirm') {\n          return;\n        }\n\n        const urls = article.url.split(',');\n        const firstUrl = urls[0] || '';\n        if (!firstUrl) {\n          ElMessage.error('无效的URL');\n          return;\n        }\n\n        const encodedUrl = encodeURIComponent(encodeURIComponent(firstUrl));\n\n        const loading = ElLoading.service({\n          lock: true,\n          text: '正在删除文章...',\n          background: 'rgba(0, 0, 0, 0.7)'\n        });\n\n        try {\n          const response = await axios.delete(`/api/crawler/articles/${encodedUrl}`);\n\n          if (response.status === 200) {\n            ElMessage.success('删除成功');\n            const index = articles.value.findIndex(a => a.url === article.url);\n            if (index !== -1) {\n              articles.value.splice(index, 1);\n            }\n          } else {\n            ElMessage.warning(response.data || '删除可能未完成，请刷新页面确认');\n          }\n        } finally {\n          loading.close();\n        }\n      } catch (error) {\n        console.error('删除失败:', error);\n\n        if (error.response?.data) {\n          const errorText = error.response.data.includes('<!doctype html>')\n            ? '服务器请求错误'\n            : error.response.data;\n          ElMessage.error(`删除失败：${errorText}`);\n        } else if (error.request) {\n          ElMessage.error('删除失败：无法连接到服务器');\n        } else {\n          ElMessage.error(`删除失败：${error.message}`);\n        }\n      }\n    }\n\n    // 重建搜索索引\n    const rebuildSearchIndex = async () => {\n      try {\n        rebuildingIndex.value = true;\n        ElMessage.info('正在重建搜索索引，请稍候...');\n        \n        const response = await axios.post('/api/search/rebuild-index');\n        \n        if (response.data && response.data.success) {\n          ElMessage.success(response.data.message || '搜索索引重建成功');\n        } else {\n          ElMessage.warning('重建过程完成，但可能存在问题');\n        }\n      } catch (error) {\n        console.error('重建索引失败:', error);\n        ElMessage.error('重建搜索索引失败: ' + (error.response?.data?.error || error.message));\n      } finally {\n        rebuildingIndex.value = false;\n      }\n    };\n\n    onMounted(() => {\n      loadArticles()\n      loadTags()\n    })\n\n    return {\n      crawlerForm,\n      crawling,\n      searchKeyword,\n      articles,\n      articleImages,\n      tags,\n      selectedTag,\n      filteredArticles,\n      rebuildingIndex,\n      crawlArticle,\n      searchArticles,\n      deleteArticle,\n      formatDate,\n      openArticle,\n      filterByTag,\n      rebuildSearchIndex\n    }\n  }\n}\n</script>\n\n<template>\n  <div class=\"home\">\n    <!-- 爬虫表单 -->\n    <el-card class=\"crawler-form\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>添加文章</span>\n        </div>\n      </template>\n\n      <el-form :model=\"crawlerForm\" label-width=\"120px\">\n        <el-form-item label=\"文章URL\">\n          <el-input v-model=\"crawlerForm.url\" placeholder=\"请输入微信公众号文章URL\"></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"crawlArticle\" :loading=\"crawling\">\n            开始爬取\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <!-- 搜索框 -->\n    <el-card class=\"search-form\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>搜索文章</span>\n          <el-button \n            type=\"warning\" \n            size=\"small\" \n            @click=\"rebuildSearchIndex\" \n            :loading=\"rebuildingIndex\"\n          >\n            重建搜索索引\n          </el-button>\n        </div>\n      </template>\n\n      <el-input\n        v-model=\"searchKeyword\"\n        placeholder=\"请输入搜索关键词\"\n        class=\"search-input\"\n        @keyup.enter=\"searchArticles\"\n      >\n        <template #append>\n          <el-button @click=\"searchArticles\">搜索</el-button>\n        </template>\n      </el-input>\n    </el-card>\n\n    <!-- 文章列表 -->\n    <el-card v-if=\"articles.length > 0\" class=\"article-list\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>文章列表</span>\n          <div class=\"tag-container\">\n            <el-tag\n              v-for=\"tag in tags\"\n              :key=\"tag\"\n              :type=\"selectedTag === tag ? 'primary' : 'info'\"\n              effect=\"plain\"\n              class=\"tag-item\"\n              @click=\"filterByTag(tag)\"\n            >\n              {{ tag }}\n            </el-tag>\n          </div>\n        </div>\n      </template>\n\n      <div class=\"waterfall-container\">\n        <div v-for=\"article in filteredArticles\" :key=\"article.id\" class=\"article-card\">\n          <el-card shadow=\"hover\" class=\"article-item\">\n            <div v-if=\"articleImages[article.id]\" class=\"article-image\">\n              <img :src=\"articleImages[article.id]\" alt=\"文章头图\" />\n            </div>\n            <div class=\"article-title\">\n              <router-link :to=\"{ \n                name: 'ArticleDetail', \n                params: { \n                  id: encodeURIComponent(article.url)\n                }\n              }\">\n                {{ article.title }}\n              </router-link>\n            </div>\n            <div class=\"article-meta\">\n              <span class=\"author\">作者：{{ article.author }}</span>\n              <span class=\"account\">公众号：{{ article.accountName }}</span>\n              <span class=\"time\">发布时间：{{ formatDate(article.publishTime) }}</span>\n            </div>\n            <div class=\"article-actions\">\n              <el-button-group>\n                <el-button\n                  size=\"small\"\n                  type=\"primary\"\n                  @click=\"openArticle(article)\"\n                >\n                  阅读原文\n                </el-button>\n                <el-button\n                  size=\"small\"\n                  type=\"danger\"\n                  @click=\"deleteArticle(article)\"\n                >\n                  删除\n                </el-button>\n              </el-button-group>\n            </div>\n          </el-card>\n        </div>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<style scoped>\n.home {\n  padding: 20px;\n}\n\n.crawler-form,\n.search-form,\n.article-list {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.tag-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n}\n\n.tag-item {\n  cursor: pointer;\n  margin-right: 5px;\n  transition: all 0.3s;\n}\n\n.tag-item:hover {\n  transform: scale(1.05);\n}\n\n.search-input {\n  width: 100%;\n}\n\na {\n  color: #409EFF;\n  text-decoration: none;\n}\n\na:hover {\n  text-decoration: underline;\n}\n\n.waterfall-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n  padding: 10px;\n}\n\n.article-card {\n  break-inside: avoid;\n  margin-bottom: 20px;\n}\n\n.article-item {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.article-image {\n  width: 100%;\n  margin-bottom: 15px;\n  overflow: hidden;\n  border-radius: 4px;\n}\n\n.article-image img {\n  width: 100%;\n  height: 150px;\n  object-fit: cover;\n  transition: transform 0.3s ease;\n}\n\n.article-image img:hover {\n  transform: scale(1.05);\n}\n\n.article-title {\n  font-size: 16px;\n  font-weight: bold;\n  margin-bottom: 10px;\n  line-height: 1.4;\n}\n\n.article-title a {\n  color: #303133;\n  text-decoration: none;\n}\n\n.article-title a:hover {\n  color: #409EFF;\n}\n\n.article-meta {\n  font-size: 12px;\n  color: #909399;\n  margin-bottom: 15px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n}\n\n.article-actions {\n  margin-top: auto;\n  padding-top: 10px;\n  border-top: 1px solid #EBEEF5;\n}\n\n.article-actions .el-button-group {\n  display: flex;\n  justify-content: flex-start;\n  gap: 5px;\n}\n\n@media (max-width: 768px) {\n  .waterfall-container {\n    grid-template-columns: 1fr;\n  }\n}\n</style>\n"],"names":["dayjs","_sfc_main","crawlerForm","ref","crawling","searchKeyword","articles","useRouter","articleImages","tags","selectedTag","filteredArticles","rebuildingIndex","crawlArticle","ElMessage","checkResponse","axios","loadArticles","response","error","_a","searchArticles","article","loadArticleImage","articleId","a","err","imagePaths","firstImagePath","imageUrl","loadTags","filterByTag","tag","formatDate","dateStr","formattedDate","openArticle","url","deleteArticle","ElMessageBox","firstUrl","encodedUrl","loading","ElLoading","index","errorText","rebuildSearchIndex","_b","onMounted","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_openBlock","_createElementBlock","_createCommentVNode","_cache","_createTextVNode","_createVNode","_component_el_card","_createElementVNode","_withCtx","_component_el_form","$setup","_component_el_form_item","_component_el_input","$event","_component_el_button","_withKeys","_createBlock","_Fragment","_renderList","_component_el_tag","_toDisplayString","_hoisted_6","_component_router_link","_component_el_button_group"],"mappings":"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"}